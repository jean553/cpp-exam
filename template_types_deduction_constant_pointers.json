{
    "question": "What is the deduced type of 'param' inside the function f() when f() is called ?",
    "code": "template<typename T> \nvoid f(const T* param); \nint value = 5; \nint* ptr = &value; \nf(ptr);",
    "a": "int*",
    "b": "const int*",
    "c": "int* const",
    "d": "const int* const",
    "answer": "b"
},
{
    "question": "What is the deduced type of 'param' inside the function f() when f() is called ?",
    "code": "template<typename T> \nvoid f(const T* param); \nint value = 5; \nint* const ptr = &value; \nf(ptr);",
    "a": "int*",
    "b": "const int*",
    "c": "int* const",
    "d": "const int* const",
    "answer": "b"
},
{
    "question": "What is the deduced type of 'param' inside the function f() when f() is called ?",
    "code": "template<typename T> \nvoid f(const T* const param); \nint value = 5; \nint* ptr = &value; \nf(ptr);",
    "a": "int*",
    "b": "const int*",
    "c": "int* const",
    "d": "const int* const",
    "answer": "d"
},
{
    "question": "What is the deduced type of 'param' inside the function f() when f() is called ?",
    "code": "template<typename T> \nvoid f(T* const param); \nint value = 5; \nint* ptr = &value; \nf(ptr);",
    "a": "int*",
    "b": "const int*",
    "c": "int* const",
    "d": "const int* const",
    "answer": "c"
},
{
    "question": "What is the deduced type of 'param' inside the function f() when f() is called ?",
    "code": "template<typename T> \nvoid f(T* const param); \nint value = 5; \nconst int* ptr = &value; \nf(ptr);",
    "a": "int*",
    "b": "const int*",
    "c": "int* const",
    "d": "const int* const",
    "answer": "d"
}
